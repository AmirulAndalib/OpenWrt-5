#
# Copyright (c) 2019-2021 smallprogram
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/smallprogram/OpenWrtAction
# File: .github/workflows/Update_Checker.yml
# Description: Source code update checker
#
name: Multiple Source Check


  
on:
  workflow_dispatch:
  schedule:
    - cron: 6 */2 * * * 
     
env:
  TZ: Asia/Shanghai

jobs:
  Checka:
    runs-on: ubuntu-latest
    env:
      REPO_URL_Lede: https://github.com/coolsnowwolf/lede
      REPO_BRANCH_Lede: master
      REPO_PATH_Lede : "lede"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_Lede -b $REPO_BRANCH_Lede $REPO_PATH_Lede
        cd $REPO_PATH_Lede
        echo "::set-output name=commitHash_Lede::$(git rev-parse HEAD)"
        cd      
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_Lede: ${{ steps.getHash.outputs.commitHash_Lede }}"
        echo "::set-output name=commitHash_All::\
          ${{steps.getHash.outputs.commitHash_Lede}}"     
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash_All
        key: HEAD-${{ steps.combHeader.outputs.commitHash_All }}
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash_Lede }} | tee .commitHash_Lede
        echo ${{ steps.combHeader.outputs.commitHash_All }} | tee .commitHash_All     
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ‚ú®‡º∫Lede‡ºª‚ú®
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/coolsnowwolf/lede
# /////////////////////////////////////////////////////////////////////////////////////////////////////////        
  Checkb:
    runs-on: ubuntu-latest
    env:
      REPO_URL_HelloWorld: https://github.com/fw876/helloworld
      REPO_BRANCH_HelloWorld: master
      REPO_PATH_HelloWorld : "helloworld"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_HelloWorld -b $REPO_BRANCH_HelloWorld $REPO_PATH_HelloWorld 
        cd $REPO_PATH_HelloWorld
        echo "::set-output name=commitHash_HelloWorld::$(git rev-parse HEAD)"
        cd    
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_HelloWorld: ${{ steps.getHash.outputs.commitHash_HelloWorld }}"
        echo "::set-output name=commitHash_All::\
          ${{steps.getHash.outputs.commitHash_HelloWorld}}"      
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash_All
        key: HEAD-${{ steps.combHeader.outputs.commitHash_All }}
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
         echo ${{ steps.getHash.outputs.commitHash_HelloWorld }} | tee .commitHash_HelloWorld
         echo ${{ steps.combHeader.outputs.commitHash_All }} | tee .commitHash_All       
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          üöÄ HelloWorld
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/fw876/helloworld   
# /////////////////////////////////////////////////////////////////////////////////////////////////////////       
  Checkc:
    runs-on: ubuntu-latest
    env:
      REPO_URL_OpenClash: https://github.com/vernesong/OpenClash
      REPO_BRANCH_OpenClash: master
      REPO_PATH_OpenClash : "OpenClash"
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        git clone --depth 1 $REPO_URL_OpenClash -b $REPO_BRANCH_OpenClash $REPO_PATH_OpenClash
        cd $REPO_PATH_OpenClash
        echo "::set-output name=commitHash_OpenClash::$(git rev-parse HEAD)"
        cd  
    - name: Show Commit Head and Combination Heads
      id: combHeader
      run: |
        echo "commitHash_OpenClash: ${{ steps.getHash.outputs.commitHash_OpenClash }}"
        echo "::set-output name=commitHash_All::\
          ${{steps.getHash.outputs.commitHash_OpenClash}}"         
    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v2
      with:
        path: .commitHash_All
        key: HEAD-${{ steps.combHeader.outputs.commitHash_All }}        
    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
         echo ${{ steps.getHash.outputs.commitHash_OpenClash }} | tee .commitHash_OpenClash
         echo ${{ steps.combHeader.outputs.commitHash_All }} | tee .commitHash_All       
    - name: Telegram notification upload success
      if: steps.cacheHash.outputs.cache-hit != 'true'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          üöÄ OpenClash
                ‚óè Ê∫êÁ†ÅÊõ¥Êñ∞‰∫Ü
          ‚ú™ ‚ú£ ‚ú§ ‚ú• ‚ú¶ ‚ùâ ‚ù¶ ‚ùß ‚ùÉ ‚ùÇ ‚ùÅ ‚ùÄ
          üìçÔºöhttps://github.com/vernesong/OpenClash
# //////////////////////////////////////////////////////////////////////////////////////////////
  Cleaning:
    if: ${{ always() }}
    needs: [Checka,Checkb,Checkc]    
    runs-on: ubuntu-latest
    steps:  
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 6
        keep_minimum_runs: 6
