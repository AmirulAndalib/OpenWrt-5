#===============================================
# Description: ARMv8 OpenWrt
# Lisence: MIT
# By：Jejz
#===============================================

name: ARMv8 OpenWrt快速打包

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_soc:
        description: "Select 0penwrt SoC"
        required: false
        default: "s905x3_s905d"
        type: choice
        options:
          - s905x3_s905d
          - all
          - a311d
          - s922x
          - s922x-n2
          - s922x-reva
          - s905x3
          - s905x2
          - s905x2-km3
          - s912
          - s912-m8s
          - s905d
          - s905d-ki
          - s905x
          - s905w
          - s905
          - s905l3a
      kernel_version:
        description: "Select kernel version"
        required: false
        default: "5.4.191_5.10.116_5.15.50_5.18.10_5.19.1"
        type: choice
        options:
          - 5.4.191_5.10.116_5.15.60_5.18.16_5.19.1
          - 5.4.191_5.10.116
          - 5.10.116_5.15.60
          - 5.15.60_5.18.16
          - 5.4.191
          - 5.10.100
          - 5.15.60
          - 5.18.16
          - 5.19.1
  #schedule:
    #- cron: '45 22 * * *'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: armv8/feeds.conf.default
  CONFIG_FILE: armv8/armv8.config
  DIY_P1_SH: armv8/diy-part1.sh
  DIY_P2_SH: armv8/diy-part2.sh
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: ARMv8
  PRODUCT_NAME: ARMv8

jobs:
  build:
    runs-on: ubuntu-22.04
    #if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel/tools/script/ubuntu2204-make-openwrt-depends)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        Author=$(git show -s --date=short --format="Author: %an")
        Date=$(git show -s --date=short --format="date: %ci")
        Commit=$(git show -s --date=short --format="commit: %s")
        Hash=$(git show -s --date=short --format="commit hash: %h")
        echo "author=$Author" >> $GITHUB_ENV
        echo "date=$Date" >> $GITHUB_ENV
        echo "commit=$Commit" >> $GITHUB_ENV
        echo "hash=$Hash" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "TAG=$(date "+%Y%m%d")" >> $GITHUB_ENV
        echo "DATE1=$(date "+%Y-%m-%d")" >> $GITHUB_ENV
    
    - name: Package Armvirt as OpenWrt
      if: (!cancelled())
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: https://github.com/Jejz168/OpenWrt/releases/download/ARMv8-ROOTFS/openwrt-armvirt-64-default-rootfs.tar.gz
        PACKAGE_SOC: ${{ github.event.inputs.openwrt_soc }}
        WHOAMI: Jejz
        DISTRIB_REVISION: ${OPENWRT_VER} (By @Jejz build $(TZ=UTC-8 date "+%Y-%m-%d %H:%M"))
        KERNEL_REPO_URL: https://github.com/Jejz168/OpenWrt/tree/main/backup/kernel
        KERNEL_VERSION_NAME: ${{ github.event.inputs.kernel_version }}
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .gz
    
    - name: Upload artifact to Actions
      uses: kittaakos/upload-artifact-as-is@master
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        path: ${{ env.PACKAGED_OUTPUTPATH }}/

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: ${{ env.DATE }} 「 ${{ env.FILE_NAME }} 」固件
        allowUpdates: true
        tag: ${{ env.PRODUCT_NAME }}
        token: ${{ secrets.GH_TOKEN }}
        body: |
          - ⭐️默认 IP：192.168.8.8 默认密码：password
          - 🔥此为 ARMv8(带docker) ，集成一些日常常用插件
          - 安装到 EMMC：系统 → 晶晨宝盒 → 安装 OpenWrt → 选择型号 → 安装
          - 升级 OpenWrt：系统 → 晶晨宝盒 → 手动上传更新 或者 在线下载更新
          - 常见问题及注意事项请参考恩山F大➦[最新帖](https://www.right.com.cn/forum/thread-4076037-1-1.html)
          - 当前使用版本:【编译前的最后一次➦[主源码](https://github.com/coolsnowwolf/lede)更新记录】
          - ★ 感谢源码作者无私分享！
          - 🎈🎈🎈 更新信息 🎈🎈🎈
          - 作者: ${{ env.author }}        
          - 时间: ${{ env.date }}        
          - 内容: ${{ env.commit }}        
          - hash: ${{ env.hash }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        
    - name: Telegram notification upload success
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          💥${{ env.PRODUCT_NAME }}打包完成
          开始时间：${{ env.DATE }}
          🎈🎈🎈 更新信息 🎈🎈🎈
          作者: ${{ env.author }}
          时间: ${{ env.date }}
          内容: ${{ env.commit }}
          hash: ${{ env.hash }}
